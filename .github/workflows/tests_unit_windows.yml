name: Unit tests Windows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  Test-go-windows:
    strategy:
      matrix:
        go: [ 1.14 ]
        goarch: [ amd64 ]
    runs-on: windows-2019
    steps:
#      - name: Install Chocolatey
#        shell: powershell
#        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
#      - name: Choco install Go
#        uses: crazy-max/ghaction-chocolatey@v1
#        with:
#          args: install golang --version 1.14 -y
#      - name: Choco install Make
#        uses: crazy-max/ghaction-chocolatey@v1
#        with:
#          args: install make -y

       - name: Setting EnvVariable to checkout newLine char properly
         shell: bash
         run: |
           git config --system core.autocrlf false
           git config --system core.eol lf

       - name: Check out code into the Go module directory
         uses: actions/checkout@v1
         with:
           fetch-depth: 1
           path: go/src/github.com/jportasa/${{ github.event.repository.name }}

       - name: Run Go tests
         shell: powershell
         run: |
           $env:GOPATH = "d:\a\${{ github.event.repository.name }}\go"
           $env:GOBIN = "d:\a\${{ github.event.repository.name }}\go\bin"
           $env:path = "$env:path;$env:GOBIN;C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin"
           go build ./...
           go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
           .\win_build.ps1 -integration ${{ github.event.repository.name }}

