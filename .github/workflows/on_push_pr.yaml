name: Push/PR

on:
  push:
    branches:
      - main
      - master
      - renovate/**
  pull_request:

env:
  TAG: "v0.0.0" # needed for goreleaser windows builds
  REPO_FULL_NAME: ${{ github.event.repository.full_name }}
  ORIGINAL_REPO_NAME: "newrelic/nri-kafka"
  NRJMX_VERSION: '2.3.2'
  DOCKER_LOGIN_AVAILABLE: ${{ secrets.OHAI_DOCKER_HUB_ID }}

jobs:
  static-analysis:
    name: Run all static analysis checks
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - uses: newrelic/newrelic-infra-checkers@v1
        with:
          golangci-lint-config: golangci-lint-limited
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        continue-on-error: ${{ github.event_name != 'pull_request' }}
        with:
          only-new-issues: true
      - name: Check if CHANGELOG is valid
        uses: newrelic/release-toolkit/validate-markdown@v1

  test-nix:
    name: Run unit tests on *Nix
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Unit tests
        run: make ci/test

  test-windows:
    name: Run unit tests on Windows
    runs-on: windows-2022
    env:
      GOPATH: ${{ github.workspace }}
    defaults:
      run:
        working-directory: src/github.com/${{ env.ORIGINAL_REPO_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: src/github.com/${{env.ORIGINAL_REPO_NAME}}
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'src/github.com/${{env.ORIGINAL_REPO_NAME}}/go.mod'
      - name: Running unit tests
        shell: pwsh
        run: |
          .\build\windows\unit_tests.ps1

  # can't run this step inside of container because of tests specific
  test-integration-nix:
    name: Run integration tests on *Nix
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: src/github.com/${{env.ORIGINAL_REPO_NAME}}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: src/github.com/${{env.ORIGINAL_REPO_NAME}}
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'src/github.com/${{env.ORIGINAL_REPO_NAME}}/go.mod'
      # One of the integration consumer tests is not working as expected to the environment bootstrap, to keep it
      # we have a simple retry mechanism spawning again the system.
      - name: Integration test
        run:  for i in 1 2 3; do make integration-test && break; done

  test-build:
    name: Test binary compilation for all platforms:arch
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Build all platforms:arch
        run: make ci/build
