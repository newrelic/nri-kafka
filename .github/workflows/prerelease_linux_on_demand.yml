name: . üöÄ üêß ü¶∫ Testing Prerelease Linux On Demand

on:
  push:
    branches:
      - test_publish

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NRJMX_VERSION: '2.3.2'
  INTEGRATION: "kafka"
  ORIGINAL_REPO_NAME: "newrelic/nri-kafka"
  DEST_PREFIX: ${{ github.event.inputs.dest_prefix }}
  TAG: ${{ github.event.inputs.tag }}

jobs:
  publish-to-s3:
    name: Send release assets to S3
    runs-on: ubuntu-20.04
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Publish to S3 action
        uses: newrelic/infrastructure-publish-action@v1
        env:
          AWS_S3_BUCKET_NAME: "nr-downloads-ohai-testing"
          AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-testing"
        with:
          disable_lock: false
          run_id: ${{ github.run_id }}
          tag: v3.2.2
          app_name: "nri-${{env.INTEGRATION}}"
          repo_name: ${{ env.ORIGINAL_REPO_NAME }}
          access_point_host: "testing"
          schema: "ohi-jmx" # ohi-jmx for integrations that bundle JMX on windows installers
          aws_region: "us-east-1"
          aws_role_arn: ${{ secrets.OHAI_AWS_ROLE_ARN_TESTING }}
          aws_role_session_name: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_TESTING }}
          aws_access_key_id: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_TESTING }}
          aws_secret_access_key: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_TESTING }}
          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
          # used for locking in case of concurrent releases
          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
          # used for signing package stuff
          gpg_passphrase: ${{ secrets.OHAI_GPG_PASSPHRASE }}
          gpg_private_key_base64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }}
          dest_prefix: coreint-lock-
